{{!< default}}

{{#post}}

  <article class="post-container post-container--single">

    <header class="post-header">
      <div class="post-meta">
        <time datetime="{{date format="YYYY MMM DD"}}" class="post-meta__date date">{{date format="YYYY MMM DD"}}</time> &#8226; <span class="post-meta__tags tags">{{tags}}</span>
        <span class="post-meta__author author"><img src="{{primary_author.profile_image}}" alt="profile image for {{primary_author.name}}" class="avatar post-meta__avatar" /> by {{primary_author.name}}</span>
      </div>
      <h1 class="post-title">{{{title}}}</h1>
    </header>

    <div class="toc"></div>
    <section class="toc-content {{post_class}}">
      {{content}}
    </section>
  </article>

  <div class="post_navi">
  {{#prev_post}}
    <div class="prev_post">上一篇：<a style="display:inline-block;max-width:300px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis" href="{{url}}">{{title}}</a></div>
  {{/prev_post}}
  {{#next_post}}
    <div class="next_post">下一篇：<a style="display:inline-block;max-width:300px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis" href="{{url}}">{{title}}</a></div>
  {{/next_post}}
  </div>

  {{#has tag="MathJax"}}
    <script src='https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML'></script>
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
            inlineMath: [['$','$'], ['\\(','\\)']],
            processEscapes: true
        }
      });
    </script>
  {{/has}}
<div id="disqus_thread"></div>
<style>
  .toc {
    font-size: 12px;
  }
</style>

<script async>
//fetch with timeout
const fetchRequest = (url, params={}, timeout=10000) => {
    let isTimeout = false;
    return new Promise(function(resolve, reject) {
        const TO = setTimeout(function() {
            isTimeout = true;
            reject(new Error('Fetch timeout'));
        }, timeout);

        fetch(url, params)
            .then(res => {
                clearTimeout(TO)
                if(!isTimeout) {
                    resolve(res)
                }
            }).catch(e => {
                if( isTimeout ){
                    return
                }
                reject(e)
            })
    })
}

  {{#if @custom.disqus_link}}

    let disqus_config = function () {
      this.page.url = "{{url absolute="true"}}";
      this.page.identifier = "ghost-{{comment_id}}"
    };

      function hide_ads(){
        setInterval(()=>{
          let iframes= document.getElementsByTagName('iframe')
          for(let idx in iframes){
            let iframe=iframes[idx];
            if(iframe.title==='Disqus'&&!iframe.src){
              iframe.parentElement.removeChild(iframe)
            }
          }
        },1000)
      }


      function show_disqus(){
	console.log("Facebook contected , disqus is shown.");
	var d = document, s = d.createElement('script');
        s.defer = "defer"
        s.src = "{{@custom.disqus_link}}"
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
	hide_ads();

      }

      function hide_disqus(){
	console.log("GFW detected , disqus is hidden.");
      }

      fetchRequest("https://graph.facebook.com/feed?callback=h",{},1000)
        .then(res=>{
	  if(res.status===200){
	    show_disqus();
	  }else{
	    hide_disqus();
	  }
	})
	.catch(e=>{
	   console.log(e);
	   hide_disqus();
	})
  {{/if}}
</script>
<script defer type="text/javascript" src="{{asset "js/tocbot-4.11.1.min.js"}}" onload="tocbot.init({
    tocSelector: '.toc',
    contentSelector: '.toc-content',
    headingSelector: 'h1, h2, h3',
    hasInnerContainers: true,
  });"></script>
{{/post}}

{{#if @custom.paragraph_indent }}
  <style scoped>
   article p {
      text-indent:2em
    }
  </style>
{{/if}}
